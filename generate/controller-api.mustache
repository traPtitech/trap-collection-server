{{>partial_header}}
package {{packageName}}

{{#operations}}
import (
	"net/http"
  "fmt"

	echo "github.com/labstack/echo/v4"
)

type {{classname}} interface{
  {{#operation}}
  {{nickname}}({{^useSingleRequestParameter}}{{#allParams}}{{#isQueryParam}}{{paramName}} string{{/isQueryParam}}{{^isQueryParam}}{{#isPathParam}}{{paramName}} string{{/isPathParam}}{{^isPathParam}}{{#isFormParam}}{{#isFile}}{{paramName}} multipartFile{{/isFile}}{{^isFile}}{{paramName}} string{{/isFile}}{{/isFormParam}}{{^isFormParam}}{{#isCookieParam}}{{paramName}} string{{/isCookieParam}}{{^isCookieParam}}{{#isBodyParam}}{{paramName}} {{#isPrimitiveType}}{{dataType}}{{/isPrimitiveType}}{{^isPrimitiveType}}*{{dataType}}{{/isPrimitiveType}}{{/isBodyParam}}{{^isBodyParam}}c echo.Context{{/isBodyParam}}{{/isCookieParam}}{{/isFormParam}}{{/isPathParam}}{{/isQueryParam}}{{#hasMore}}, {{/hasMore}}{{/allParams}}{{/useSingleRequestParameter}}) ({{#isListContainer}}[]*{{returnBaseType}},{{/isListContainer}}{{^isListContainer}}{{^returnTypeIsPrimitive}}{{#returnType}}{{^isResponseFile}}*{{/isResponseFile}}{{returnType}},{{/returnType}}{{/returnTypeIsPrimitive}}{{#returnTypeIsPrimitive}}{{#returnType}}{{returnType}},{{/returnType}}{{/returnTypeIsPrimitive}}{{/isListContainer}} error)
  {{/operation}}
}{{#operation}}

// {{baseName}}Handler - {{summary}}
func {{baseName}}Handler({{classname}} {{classname}}) echo.HandlerFunc {
  return func(c echo.Context) error {
    var err error{{#hasQueryParams}}{{#queryParams}}
    {{paramName}} := c.QueryParam("{{paramName}}"){{/queryParams}}{{/hasQueryParams}}{{#hasPathParams}}{{#pathParams}}
    {{paramName}} := c.Param("{{paramName}}"){{/pathParams}}{{/hasPathParams}}{{#hasFormParams}}{{#formParams}}{{#isFile}}
    _{{paramName}},err := c.FormFile("{{paramName}}")
    if err != nil {
      return c.String(http.StatusBadRequest, fmt.Errorf("Failed In Forming File:%w",err).Error())
    }
    {{paramName}},err := _{{paramName}}.Open()
    if err != nil {
      return c.String(http.StatusBadRequest, fmt.Errorf("Failed In Opening File:%w",err).Error())
    }
    defer {{paramName}}.Close(){{/isFile}}{{^isFile}}
    {{paramName}} := c.FormValue("{{paramName}}"){{/isFile}}{{/formParams}}{{/hasFormParams}}{{#hasCookieParams}}{{#cookieParams}}{{#isCookieParam}}
    cookie{{paramName}}, err := c.Cookie("{{paramName}}")
    if err != nil {
      return c.String(http.StatusBadRequest, fmt.Errorf("Failed In Binding Cookie:%w",err).Error())
    }
    {{paramName}} := cookie{{paramName}}.Value{{/isCookieParam}}{{/cookieParams}}{{/hasCookieParams}}{{#hasBodyParam}}{{#bodyParam}}{{#isPrimitiveType}}{{/isPrimitiveType}}
    var {{paramName}} {{dataType}}
    err = c.Bind(&{{paramName}})
    if err != nil {
      return c.String(http.StatusBadRequest, fmt.Errorf("Failed In Binding Request Body:%w",err).Error())
    }{{/bodyParam}}{{/hasBodyParam}}
    {{#isListContainer}}var res []*{{returnBaseType}}{{/isListContainer}}{{^isListContainer}}{{^returnTypeIsPrimitive}}{{#returnType}}var res {{^isResponseFile}}*{{/isResponseFile}}{{returnType}}{{/returnType}}{{/returnTypeIsPrimitive}}{{#returnTypeIsPrimitive}}{{#returnType}}var res {{returnType}}{{/returnType}}{{/returnTypeIsPrimitive}}{{/isListContainer}}
    {
      {{#returnType}}res, {{/returnType}}err = {{classname}}.{{nickname}}({{^useSingleRequestParameter}}{{#allParams}}{{#isQueryParam}}{{paramName}}{{/isQueryParam}}{{^isQueryParam}}{{#isPathParam}}{{paramName}}{{/isPathParam}}{{^isPathParam}}{{#isFormParam}}{{paramName}}{{/isFormParam}}{{^isFormParam}}{{#isCookieParam}}{{paramName}}{{/isCookieParam}}{{^isCookieParam}}{{#isBodyParam}}{{#isPrimitiveType}}{{paramName}}{{/isPrimitiveType}}{{^isPrimitiveType}}&{{paramName}}{{/isPrimitiveType}}{{/isBodyParam}}{{^isBodyParam}}c{{/isBodyParam}}{{/isCookieParam}}{{/isFormParam}}{{/isPathParam}}{{/isQueryParam}}{{#hasMore}}, {{/hasMore}}{{/allParams}}{{/useSingleRequestParameter}})
      if err != nil {
        return c.String(http.StatusInternalServerError, fmt.Errorf("Failed In Making Response:%w",err).Error())
      }
    }{{^isResponseFile}}{{#returnType}}
    return c.JSON(http.StatusOK, res){{/returnType}}{{^returnType}}
    return c.NoContent(http.StatusOK){{/returnType}}{{/isResponseFile}}{{#isResponseFile}}
    return c.Stream(http.StatusOK, {{#produces.0}}"{{mediaType}}"{{/produces.0}}, res){{/isResponseFile}}
  }
}{{/operation}}{{/operations}}
