name: CI

on: [push]

jobs:
  mod:
    name: Mod
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v1
        with:
          go-version: 1.15
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-gomod-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-gomod-
      - run: go mod download
  generate:
    name: Generate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-gomod-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-gomod-
      - run: mkdir ~/grapes-cache
      - uses: actions/cache@v1
        with:
          path: ~/grapes-cache
          key: ${{ runner.os }}-grapes-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-grapes-${{ github.ref }}-
            ${{ runner.os }}-grapes-
      - name: Generate Code From OpenAPI
        run: |
          docker run --rm \
            -v $PWD:/local \
            -v ~/grapes-cache:/home/groovy/.groovy/grapes \
            -u root \
            -w /home/groovy/scripts \
            groovy:3.0.2 \
            groovy /local/generate/generator.groovy generate \
            -i /local/docs/swagger/openapi.yml \
            -g CollectionCodegen \
            -t /local/generate \
            -o /local
      - uses: actions/upload-artifact@v1
        with:
          name: openapi
          path: openapi
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [mod,generate]
    env:
      GOCACHE: "/tmp/go/cache"
    steps:
      - uses: actions/setup-go@v1
        with:
          go-version: 1.15
      - uses: actions/checkout@v1
      - uses: actions/download-artifact@v1
        with:
          name: openapi
      - name: Add PATH
        run: echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      - run: go install github.com/golang/mock/mockgen
      - run: go generate ./...
      - uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-gomod-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-gomod-
      - uses: actions/cache@v1
        with:
          path: /tmp/go/cache
          key: ${{ runner.os }}-go-build-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-go-build-${{ github.ref }}-
            ${{ runner.os }}-go-build-
      - run: go build -o collection
  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: [generate]
    steps:
      - uses: actions/setup-go@v1
        with:
          go-version: 1.15
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v1
        with:
          name: openapi
      - name: Add PATH
        run: echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      - run: go install github.com/golang/mock/mockgen
      - run: go generate ./...
      - name: golangci-lint
        uses: reviewdog/action-golangci-lint@v1
        with:
          reporter: github-pr-check
          github_token: ${{ secrets.GITHUB_TOKEN }}
          fail_on_error: true
  spectral:
    name: Spectral
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Spectral checks
        uses: stoplightio/spectral-action@v0.5.5
        with:
          file_glob: docs/swagger/*.yaml
          repo_token: ${{ secrets.GITHUB_TOKEN }}