name: CI

on:
  push:
    branches:
      - "main"
  pull_request:

permissions:
  contents: read
  pull-requests: write

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - run: go build -o collection
  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      dind:
        image: docker:23.0-rc-dind-rootless
        ports:
          - 2375:2375
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Setup Atlas
        uses: ariga/setup-atlas@v0

      - run: go generate ./...
      - run: mkdir -p /tmp/coverage
      - name: Run test
        run: go test ./src/... -v -coverprofile=/tmp/coverage/coverage.txt -race -vet=off
      - name: Upload coverage data
        uses: codecov/codecov-action@v5.4.3
        with:
          files: /tmp/coverage/coverage.txt
          token: ${{ secrets.CODECOV_TOKEN }}
      - uses: actions/upload-artifact@v4
        with:
          name: coverage.txt
          path: /tmp/coverage/coverage.txt
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      # go generate用に、golangci-lintの前にGoのinstallをする
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - run: go generate ./...
      - name: golangci-lint
        uses: reviewdog/action-golangci-lint@v2.8
        with:
          go_version_file: go.mod
          reporter: github-pr-check
          github_token: ${{ secrets.GITHUB_TOKEN }}
          fail_level: any

  migrate-lint:
    name: Migrate Lint
    runs-on: ubuntu-latest
    # botによるPRのときは実行しない
    if: "${{ github.event.sender.type != 'Bot' }}"
    services:
      db:
        image: mariadb:10
        env:
          MYSQL_ROOT_PASSWORD: pass
          MYSQL_DATABASE: trap_collection
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping -ppass"
          --health-interval 10s
          --health-start-period 10s
          --health-timeout 5s
          --health-retries 10
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Atlas
        uses: ariga/setup-atlas@v0

      - name: Atlas Lint
        run: |
          set +e
          LINT_OUTPUT=$(atlas migrate lint --env ci 2>&1)
          LINT_EXIT_CODE=$?
          gh pr comment ${{ github.event.pull_request.number }} \
            --body "Migrate lint
            <details>
            <summary>Lint output</summary>

            \`\`\`text
            $LINT_OUTPUT
            \`\`\`

            </details>"
          exit $LINT_EXIT_CODE
        shell: bash
        env:
          GH_TOKEN: ${{ github.token }}

  spectral:
    name: Spectral
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Spectral checks
        uses: stoplightio/spectral-action@v0.8.12
        with:
          file_glob: docs/openapi/*.yaml
          repo_token: ${{ secrets.GITHUB_TOKEN }}

  tbls:
    name: tbls
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run tbls
        run: docker compose -f docker/tbls/compose.yaml up --build --abort-on-container-exit
      
      - name: Check diff
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            echo "tbls diff detected. Please generate and commit the new docs. (task tbls)"
            exit 1
          fi
        shell: bash
