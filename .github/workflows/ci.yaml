name: CI

on:
  push:
    branches:
      - 'main'
  pull_request:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: go.mod
          cache: true
      - run: go build -o collection
  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mariadb:10.6.4
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: trap_collection
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: go.mod
          cache: true
      - run: go generate ./...
      - run: go test ./src/... -v -coverprofile=./coverage.txt -race -vet=off
        env:
          COLLECTION_ENV: production
          DB_USERNAME: root
          DB_PASSWORD: password
          DB_HOSTNAME: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: trap_collection
      - name: Upload coverage data
        uses: codecov/codecov-action@v3.1.0
        with:
          file: ./coverage.txt
          yml: ./codecov.yml
      - uses: actions/upload-artifact@v3
        with:
          name: coverage.txt
          path: coverage.txt
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      # go generate用に、golangci-lintの前にGoのinstallをする
      - uses: actions/setup-go@v3
        with:
          go-version-file: go.mod
          cache: true
      - run: go generate ./...
      - name: golangci-lint
        uses: reviewdog/action-golangci-lint@v2.2
        with:
          go-version-file: go.mod
          reporter: github-pr-check
          github_token: ${{ secrets.GITHUB_TOKEN }}
          fail_on_error: true
  spectral:
    name: Spectral
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Spectral checks
        uses: stoplightio/spectral-action@v0.8.8
        with:
          file_glob: docs/openapi/*.yaml
          repo_token: ${{ secrets.GITHUB_TOKEN }}
