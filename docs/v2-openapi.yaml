openapi: "3.0.3"
servers:
  - url: https://collection.trap.jp/api/v2
  - url: https://collection-dev.trapti.tech/api/v2
  - url: http://localhost:3000/api/v2
info:
  description: 'traP Collection v2'
  version: '2.0.0'
  title: 'traP Collection v2'
  contact:
    name: traP
    url: 'https://github.com/traPtitech/trap-collection-server'
tags:
  - name: oauth2
  - name: user
  - name: admin
  - name: game
  - name: gameRole
  - name: gameVersion
  - name: gameFile
  - name: gameURL
  - name: gameImage
  - name: gameVideo
  - name: version
  - name: launcherAuth
  - name: seat

paths:
  /oauth2/callback:
    parameters:
      - $ref: '#/components/parameters/authorizationCodeInQuery'
    get:
      tags:
        - oauth2
      operationId: getCallback
      responses:
        "200":
          description: |
            認証が成功した場合に返されます。
            セッションにユーザー情報が保存され、セッションが切れるまでログイン状態になります。
            また、Code Challengeなどは削除されます。
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: |
            セッション、またはAuthorization Codeになんらかの誤りがあり、
            認証に失敗した場合に返されます。
            誤りの内容はレスポンスのmessageに出力されます。
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: traQのOAuth 2.0のコールバック
      description: |
        traQ上での認証後にtraQから
        Authorization Codeがクエリパラメーターにつけられて、
        リダイレクトされます。
  /oauth2/code:
    get:
      tags:
        - oauth2
      operationId: getCode
      responses:
        "303":
          headers:
            Set-Cookie:
              schema: 
                type: string
                example: sessions=abcd1234; Path=/; Expires=Wed, 04 May 2022 16:24:11 GMT; Max-Age=2592000; HttpOnly; Secure
            Location:
              schema:
                type: string
                example: https://q.trap.jp/api/v3/oauth2/authorize?response_type=code&client_id=<ClientID>&code_challenge=<Code Challenge>&code_challenge_method=S256
          description: |
            セッションの設定などに成功した場合に返されます。
            traQの認可ページにリダイレクトされます。
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: OAuth 2.0のCode Verifierなどのセッションへの設定とtraQへのリダイレクト
      description: |
        OAuth 2.0を利用しての認証に必要なPKCEのCode Verifierを生成し、
        セッションに設定した上でCode ChallengeやClientIDなどを設定したtraQのURLへリダイレクトします。
  /oauth2/logout:
    post:
      tags:
        - oauth2
      security:
        - TrapMemberAuth: []
      operationId: postLogout
      responses:
        "200":
          description: |
            ログアウトに成功した場合に返されます。
            セッションが削除されます。
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: |
            セッションになんらかの誤りがあり、
            認証に失敗した場合に返されます。
            誤りの内容はレスポンスのmessageに出力されます。
        "401":
          $ref: '#/components/responses/TraPUnauthorized'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: traP Collectionの管理画面からのログアウト
      description: |
        traP Collectionの管理画面からログアウトします。
        成功するとセッションが削除されます。

  /users/me:
    get:
      tags:
        - user
      security:
        - TrapMemberAuth: []
      operationId: getMe
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: |
            自分の情報の取得に成功した際に返されます。
            レスポンスでログインしているユーザーの情報が返されます。
        "401":
          $ref: '#/components/responses/TraPUnauthorized'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: ログイン中ユーザーの情報の取得
      description: |
        ログイン中のユーザーの情報を取得します。
  /users:
    get:
      tags:
        - user
      security:
        - TrapMemberAuth: []
      operationId: getUsers
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        "401":
          $ref: '#/components/responses/TraPUnauthorized'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: traPのメンバー一覧取得
      description: |
        traPのアクティブメンバーの一覧を取得します。

  /games:
    post:
      tags:
        - game
      security:
        - TrapMemberAuth: []
      operationId: postGame
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewGame'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GameWithLatestVersion'
          description: |
            ゲームの追加に成功した際に返されます。
            レスポンスで新しく追加されたゲームの情報が返されます。
        "401":
          $ref: '#/components/responses/TraPUnauthorized'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: ゲームの追加
      description: |
        新しくゲームを追加します。
        このエンドポイントを叩いたユーザーは
        自動的にownerとなります。
    get:
      tags:
        - game
      security:
        - TrapMemberAuth: []
      parameters:
        - name: all
          in: query
          required: false
          schema:
            type: boolean
          description: |
            trueを指定すると、全てのゲーム、
            falseを指定すると、ログイン中のユーザーが作成したゲームのみを返します。
            デフォルトはtrueです。
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
          description: |
            取得するゲームの上限数を指定します。
            指定なしの場合は制限なしです。
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
          description: |
            取得するゲームの開始位置を指定します。
            指定なしの場合は0となります。
      operationId: getGames
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGamesResponse'
          description: |
            ゲームの一覧の取得に成功した際に返されます。
            レスポンスで取得したゲームの一覧と条件を満たすゲームの数が返されます。
        "401":
          $ref: '#/components/responses/TraPUnauthorized'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: ゲーム一覧の取得
      description: |
        ゲームの一覧を取得します。
  /games/{gameID}:
    parameters:
      - $ref: '#/components/parameters/gameIDInPath'
    get:
      tags:
        - game
      security:
        - TrapMemberAuth: []
        - LauncherAuth: []
      operationId: getGame
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
          description: |
            ゲームの情報の取得に成功した際に返されます。
            レスポンスで取得したゲームの情報が返されます。
        "400":
          description: |
            ゲームIDが不正な値である場合に返されます。
        "401":
          $ref: '#/components/responses/TraPUnauthorized'
        "404":
          description: |
            指定したIDのゲームが存在しない、または削除されている場合に返されます。
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: ゲーム情報の取得
      description: |
        指定したゲームIDのゲームの情報を取得します。
    patch:
      tags:
        - game
      security:
        - TrapMemberAuth: []
        - GameMaintainerAuth: []
      operationId: putGame
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchGame'
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
        "400":
          description: |
            ゲームID、またはリクエストが不正である場合に返されます。
        "401":
          $ref: '#/components/responses/TraPUnauthorized'
        "404":
          description: |
            指定したIDのゲームが存在しない、または削除されている場合に返されます。
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: ゲームの情報の修正
      description: |
        指定したゲームIDのゲームの情報を修正します。
    delete:
      tags:
        - game
      security:
        - GameOwnerAuth: []
      operationId: deleteGames
      responses:
        "200":
          description: 成功
        "400":
          description: |
            ゲームIDが不正な値である場合に返されます。
        "401":
          $ref: '#/components/responses/TraPUnauthorized'
        "404":
          description: |
            指定したIDのゲームが存在しない、または削除されている場合に返されます。
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: ゲームの削除
      description: |
        指定したゲームIDのゲームを削除します。

components:
  responses:
    TraPUnauthorized:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: |
        traQのOAuth 2.0での認証がされていない、
        もしくは認証したが既にセッションが切れている場合に返されます。
    InternalServerError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: |
        何らかの予期しないエラーが発生した場合に返されます。
        このレスポンスが返された場合、サーバーのバグやインフラの障害の可能性が高いです。
  securitySchemes:
    TrapMemberAuth:
      type: apiKey
      in: cookie
      name: sessions
      description: |
        traQのOAuth 2.0を利用してのログインをすでにしている場合のみアクセスできます。
        ユーザーがtraQで凍結された場合、1日以内に反映されます。
    GameMaintainerAuth:
      type: apiKey
      in: cookie
      name: sessions
      description: |
        ゲームのmaintainer以上の権限を持っている、
        またはtraP Collectionの管理者である場合のみアクセスできます。
        ユーザーがtraQで凍結された場合、1日以内に反映されます。
    GameOwnerAuth:
      type: apiKey
      in: cookie
      name: sessions
      description: |
        ゲームのowner以上の権限を持っている、
        またはtraP Collectionの管理者である場合のみアクセスできます。
        ユーザーがtraQで凍結された場合、1日以内に反映されます。
    AdminAuth:
      type: apiKey
      in: cookie
      name: sessions
      description: |
        traP Collectionの管理者である場合のみアクセスできます。
        ユーザーがtraQで凍結された場合、1日以内に反映されます。
    LauncherAuth:
      type: http
      scheme: bearer
      description: |
        ランチャーのプロダクトキーを利用して得られるアクセストークンを利用した認証です。
        プロダクトキーがrevokeされた場合、即座に反映されます。
  parameters:
    authorizationCodeInQuery:
      name: code
      in: query
      required: true
      schema:
        type: string
      description: |
        OAuth 2.0のAuthorization Codeです。
    operatingSystemInQuery:
      name: operatingSystem
      in: query
      required: true
      schema:
        $ref: '#/components/schemas/OperatingSystem'
      description: |
        OSの種類を示すクエリパラメータです。
    launcherVersionIDInPath:
      name: launcherVersionID
      in: path
      required: true
      schema:
        type: string
        format: uuid
      description: |
        ランチャーのバージョンのIDを示すパスパラメータです。
    gameIDInPath:
      name: gameID
      in: path
      required: true
      schema:
        type: string
        format: uuid
      description: |
        ゲームのIDを示すパスパラメータです。
    gameVersionIDInPath:
      name: gameVersionID
      in: path
      required: true
      schema:
        type: string
        format: uuid
      description: |
        ゲームのバージョンのIDを示すパスパラメータです。
    productKeyIDInPath:
      name: productKeyID
      in: path
      required: true
      schema:
        type: string
        format: uuid
      description: |
        ランチャーのプロダクトキーのIDを示すパスパラメータです。
    seatIDInPath:
      name: seatID
      in: path
      required: true
      schema:
        type: integer
      description: |
        席のIDを示すパスパラメータです。
  schemas:
    Error:
      type: object
      properties:
        message:
          type: string
          example: Internal Server Error
    OperatingSystem:
      type: string
      enum:
        - win32
        - darwin
    GetGamesResponse:
      type: object
      properties:
        num:
          type: integer
          description: |
            取得したゲームの数です。
        games:
          type: array
          items:
            $ref: '#/components/schemas/Game'
          description: |
            ゲームの一覧です。

    # エンティティ
    # ユーザー
    User:
      description: ユーザー
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UserID'
        name:
          $ref: '#/components/schemas/UserName'
      required:
        - id
        - name

    # ゲーム
    NewGame:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/GameName'
        description:
          $ref: '#/components/schemas/GameDescription'
        owners:
          type: array
          items:
            $ref: '#/components/schemas/UserName'
          description: |
            ゲームのownerの一覧です。
            指定されない場合、空配列として扱われます。
            ゲームの作成を実行したユーザーは、このリストに含まれていなくてもownerとなります。
            また、このリストにゲームの作成を実行したユーザーが含まれていた場合も、
            エラーにはならず、ゲームの作成を実行したユーザーが含まれない場合と同様の挙動をします。
        maintainers:
          type: array
          items:
            $ref: '#/components/schemas/UserName'
          description: |
            ゲームのmaintainerの一覧です。
            指定されない場合、空配列として扱われます。
            ゲームの作成を実行したユーザーを含むownerと重複するユーザーが存在した場合、
            400エラーとなります。
        version:
          $ref: '#/components/schemas/NewGameVersion'
      required:
        - name
        - description
        - version
      description: |
        ゲームを新しく作成する際に必要な情報です。
    PatchGame:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/GameName'
        description:
          $ref: '#/components/schemas/GameDescription'
      description: |
        ゲームの情報を修正する際に必要な情報です。
    Game:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/GameID'
        name:
          $ref: '#/components/schemas/GameName'
        description:
          $ref: '#/components/schemas/GameDescription'
        owners:
          type: array
          items:
            $ref: '#/components/schemas/UserName'
          description: |
            ゲームのownerの一覧です。
        maintainers:
          type: array
          items:
            $ref: '#/components/schemas/UserName'
          description: |
            ゲームのmaintainerの一覧です。
            maintainerがいない場合、このフィールドは存在しません。
        createdAt:
          $ref: '#/components/schemas/GameCreatedAt'
      required:
        - id
        - name
        - description
        - owners
        - createdAt
      description: |
        ゲームの情報です。
    GameWithLatestVersion:
      type: object
      allOf:
        - $ref: '#/components/schemas/Game'
        - type: object
          properties:
            latestVersion:
              $ref: '#/components/schemas/GameVersion'
          required:
            - latestVersion
          description: |
            ゲームとその最新バージョンの情報です。
            ゲームの作成時のレスポンスのみで使用します。

    # ゲームバージョン
    NewGameVersion:
      description: 新しいゲームのバージョン
      type: object
      properties:
        name:
          $ref: '#/components/schemas/GameVersionName'
        description:
          $ref: '#/components/schemas/GameVersionDescription'
      required:
        - name
        - description
    GameVersion:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/GameVersionID'
        name:
          $ref: '#/components/schemas/GameVersionName'
        description:
          $ref: '#/components/schemas/GameVersionDescription'
        createdAt:
          $ref: '#/components/schemas/GameVersionCreatedAt'
      required:
        - id
        - name
        - description
        - createdAt

    # 値オブジェクト
    # ユーザー
    UserID:
      type: string
      format: uuid
      description: |
        ユーザーのIDです。
        traQのユーザーのUUIDと対応します。
    UserName:
      type: string
      example: mazrean
      description: |
        ユーザー名です。
        traQのユーザーのUUIDでないmazreanなどのIDと対応します。

    # ゲーム
    GameID:
      type: string
      format: uuid
      description: |
        ゲームのIDです。
    GameName:
      type: string
      minLength: 1
      maxLength: 256
      example: 'PrestoRay'
      description: |
        ゲームの名前です。
    GameDescription:
      type: string
      minLength: 0
      maxLength: 1000
      example: |
        光を操作して進む、3Dのレースゲームです。
        光は超高速ですが、その分制御するのが非常に難しくなっています。
        コースを3周する時間を競うタイムアタックモードには、オンラインランキングを搭載。
      description: |
        ゲームの説明です。
        ゲームのランチャーでも表示されます。
    GameCreatedAt:
      type: string
      format: date-time
      description: |
        ゲームがtraP Collectionに追加された時刻です。

    # ゲームバージョン
    GameVersionID:
      type: string
      format: uuid
      description: |
        ゲームのバージョンのIDです。
    GameVersionName:
      type: string
      pattern: ^v(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$
      example: 'v1.0.0'
      description: |
        ゲームのバージョン名です。
        セマンティックバージョニングに沿った文字列が許容されます。
    GameVersionDescription:
      type: string
      minLength: 0
      maxLength: 500
      example: |
        - 新機能1の追加
        - 新機能2の追加
      description: |
        ゲームのバージョンの説明です。
        主にゲームの開発者向けの情報で、ランチャーでは表示されません。
    GameVersionCreatedAt:
      type: string
      format: date-time
      description: |
        ゲームのバージョンが作成された時刻です。
