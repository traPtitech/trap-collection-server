openapi: 3.0.2
servers:
  - url: https://collection.trap.jp/api
info:
  description: 'traPCollectionのAPI'
  version: '1.0.0'
  title: 'traPCollection API'
  contact:
    name: traP
    url: 'https://github.com/traPtitech/trap-collection-server'
tags:
  - name: oauth2
  - name: user
  - name: game
  - name: version
  - name: launcherAuth
  - name: seatVersion
  - name: seat
paths:
  /oauth2/callback:
    parameters:
      - $ref: '#/components/parameters/sessions'
      - name: code
        in: query
        required: true
        description: OAuth2.0のcode
        schema:
          type: string
    get:
      tags:
        - oauth2
      summary: OAuthのコールバック
      description: OAuthのコールバック
      operationId: callback
      responses:
        "200":
          description: 成功
        "302":
          description: 失敗時。認証ページへリダイレクト
  /oauth2/generate/code:
    parameters:
      - $ref: '#/components/parameters/sessions'
    get:
      tags:
        - oauth2
      summary: OAuthのcode_challengeとかの取得
      description: OAuthのcode_challengeとかの取得
      operationId: getGeneratedCode
      responses:
        "303":
          description: 成功。traQの認可画面に遷移する。
        "500":
          description: 失敗
  /oauth2/logout:
    post:
      tags:
        - oauth2
      summary: traP Collectionのログアウト
      description: traP Collectionのログアウト
      security:
        - TrapMemberAuth:
            - read
      operationId: postLogout
      parameters:
        - $ref: '#/components/parameters/sessions'
      responses:
        "200":
          description: 成功
        "500":
          description: 失敗
  /users/me:
    get:
      tags:
        - user
      summary: 自分の情報の取得
      description: 自分の情報の取得
      security:
        - TrapMemberAuth:
            - read
      operationId: getMe
      parameters:
        - $ref: '#/components/parameters/sessions'
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "500":
          description: 失敗
  /users:
    get:
      tags:
        - user
      summary: traQの全ユーザー取得
      description: traQの全ユーザー取得
      security:
        - TrapMemberAuth:
            - read
      operationId: getUsers
      parameters:
        - $ref: '#/components/parameters/sessions'
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        "500":
          description: 失敗
  /games:
    post:
      tags:
        - game
      summary: ゲームの追加
      description: ゲームの追加
      security:
        - TrapMemberAuth:
            - read
      operationId: postGame
      parameters:
        - $ref: '#/components/parameters/sessions'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewGame'
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GameInfo'
        "500":
          description: 失敗
    get:
      tags:
        - game
      summary: ゲーム一覧の取得
      description: ゲーム一覧の取得
      parameters:
        - name: all
          description: trueですべてのゲーム、そうでないとき自分がadminまたはmaintainerのゲーム
          in: query
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/sessions'
      security:
        - TrapMemberAuth:
            - read
      operationId: getGames
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Game'
        "500":
          description: 失敗
  /games/{gameID}:
    parameters:
      - $ref: '#/components/parameters/gameID'
    delete:
      tags:
        - game
      summary: ゲームの削除
      description: ゲームの削除
      security:
        - TrapMemberAuth:
            - read
        - GameMaintainerAuth: []
      operationId: deleteGames
      responses:
        "200":
          description: 成功
        "500":
          description: 失敗
  /games/{gameID}/info:
    parameters:
      - $ref: '#/components/parameters/gameID'
    get:
      tags:
        - game
      summary: ゲーム情報の取得
      description: ゲーム情報の取得
      security:
        - TrapMemberAuth:
            - read
        - LauncherAuth: []
      operationId: getGame
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
        "500":
          description: 失敗
    put:
      tags:
        - game
      summary: ゲームの情報の修正
      description: ゲームの情報の修正
      security:
        - TrapMemberAuth:
            - read
        - GameMaintainerAuth: []
      operationId: putGame
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewGame'
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GameInfo'
        "500":
          description: 失敗
  /games/{gameID}/image:
    parameters:
      - $ref: '#/components/parameters/gameID'
    post:
      tags:
        - game
      summary: ゲームの画像の変更
      description: ゲームの画像の変更
      security:
        - TrapMemberAuth:
            - read
        - GameMaintainerAuth: []
      operationId: postImage
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: 成功
        "500":
          description: 失敗
    get:
      tags:
        - game
      summary: ゲームの画像の取得
      description: ゲームの画像の取得
      security:
        - TrapMemberAuth:
            - read
        - LauncherAuth: []
      operationId: getImage
      responses:
        "200":
          description: 成功
          content:
            image/jpeg:
              schema:
                type: string
                format: binary
            image/png:
              schema:
                type: string
                format: binary
        "500":
          description: 失敗
  /games/{gameID}/video:
    parameters:
      - $ref: '#/components/parameters/gameID'
    post:
      tags:
        - game
      summary: ゲームの動画の変更
      description: ゲームの動画の変更
      security:
        - TrapMemberAuth:
            - read
        - GameMaintainerAuth: []
      operationId: postVideo
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: 成功
        "500":
          description: 失敗
    get:
      tags:
        - game
      summary: ゲームの動画の取得
      description: ゲームの動画の取得
      security:
        - TrapMemberAuth:
            - read
        - LauncherAuth: []
      operationId: getVideo
      responses:
        "200":
          description: 成功
          content:
            video/mp4:
              schema:
                type: string
                format: binary
        "500":
          description: 失敗
  /games/{gameID}/maintainers:
    parameters:
      - $ref: '#/components/parameters/gameID'
    post:
      tags:
        - game
      summary: ゲームのバージョン更新権限保持者の追加
      description: ゲームのバージョン更新権限保持者の追加
      parameters:
        - $ref: '#/components/parameters/sessions'
      security:
        - TrapMemberAuth:
            - read
        - GameOwnerAuth: []
      operationId: postMaintainer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Maintainers'
      responses:
        "200":
          description: 成功
        "500":
          description: 失敗
    get:
      tags:
        - game
      summary: ゲームの管理者の取得
      description: ゲームの管理者の取得
      parameters:
        - $ref: '#/components/parameters/sessions'
      security:
        - TrapMemberAuth:
            - read
      operationId: getMaintainer
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Maintainer'
        "500":
          description: 失敗
  /games/{gameID}/version:
    parameters:
      - $ref: '#/components/parameters/gameID'
    post:
      tags:
        - game
      summary: ゲームのバージョンの作成
      description: ゲームのバージョンの作成
      security:
        - TrapMemberAuth:
            - read
        - GameMaintainerAuth: []
      operationId: postGameVersion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewGameVersion'
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GameVersion'
        "500":
          description: 失敗
    get:
      tags:
        - game
      summary: ゲームのバージョン一覧の取得
      description: ゲームのバージョン一覧の取得
      security:
        - TrapMemberAuth:
            - read
      operationId: getGameVersion
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GameVersion'
        "500":
          description: 失敗
  /games/asset/{gameID}/file:
    parameters:
      - $ref: '#/components/parameters/gameID'
    post:
      tags:
        - game
      summary: ゲームの最新バージョンへのファイルの追加
      description: ゲームの最新バージョンへのファイルの追加
      security:
        - TrapMemberAuth:
            - read
        - GameMaintainerAuth: []
      operationId: postFile
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NewGameFile'
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GameFile'
        "400":
          description: 既に同じタイプのファイルがある
        "500":
          description: 失敗
    get:
      tags:
        - game
      summary: ゲームの最新バージョンのファイルの取得
      description: ゲームの最新バージョンのファイルの取得
      security:
        - TrapMemberAuth:
            - read
        - LauncherAuth: []
      operationId: getGameFile
      parameters:
        - $ref: '#/components/parameters/operatingSystem'
      responses:
        "200":
          description: 成功
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        "500":
          description: 失敗
  /games/asset/{gameID}/url:
    parameters:
      - $ref: '#/components/parameters/gameID'
    post:
      tags:
        - game
      summary: ゲームの最新バージョンへのURLの追加
      description: ゲームの最新バージョンへのURLの追加
      security:
        - TrapMemberAuth:
            - read
        - GameMaintainerAuth: []
      operationId: postURL
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewGameURL'
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GameURL'
        "400":
          description: 既に同じタイプのファイルがある
        "500":
          description: 失敗
    get:
      tags:
        - game
      summary: ゲームの最新バージョンのURLの取得
      description: ゲームの最新バージョンのURLの取得
      security:
        - TrapMemberAuth:
            - read
        - LauncherAuth: []
      operationId: getGameURL
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                type: string
        "500":
          description: 失敗
  /versions:
    post:
      tags:
        - version
      summary: 新しいバージョンの作成
      description: 新しいバージョンの作成
      security:
        - TrapMemberAuth:
            - read
        - AdminAuth: []
      operationId: postVersion
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewVersion'
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionMeta'
        "500":
          description: 失敗
    get:
      tags:
        - version
      summary: バージョン一覧の取得
      description: バージョン一覧の取得
      security:
        - TrapMemberAuth:
            - read
      operationId: getVersions
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Version'
        "500":
          description: 失敗
  /versions/{launcherVersionID}:
    parameters:
      - $ref: '#/components/parameters/launcherVersionID'
    get:
      tags:
        - version
      summary: バージョンの詳細情報の取得
      description: バージョンの詳細情報の取得
      security:
        - TrapMemberAuth:
            - read
        - LauncherAuth: []
      operationId: getVersion
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionDetails'
        "500":
          description: 失敗
  /versions/{launcherVersionID}/game:
    parameters:
      - $ref: '#/components/parameters/launcherVersionID'
    post:
      tags:
        - version
      summary: バージョンへのゲームの追加
      description: バージョンへのゲームの追加
      security:
        - TrapMemberAuth:
            - read
        - AdminAuth: []
      operationId: postGameToVersion
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GameIDs'
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionDetails'
        "500":
          description: 失敗
  /versions/{launcherVersionID}/keys:
    parameters:
      - $ref: '#/components/parameters/launcherVersionID'
    get:
      tags:
        - launcherAuth
      summary: バージョンのプロダクトキー一覧
      description: バージョンのプロダクトキー一覧
      security:
        - TrapMemberAuth:
            - read
        - AdminAuth: []
      operationId: getProductKeys
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductKeyDetail'
        "500":
          description: 失敗
  /versions/check:
    get:
      tags:
        - version
      summary: ブラウザゲーム以外のゲームのID、MD5、ゲームの種類、更新日の一覧
      description: ブラウザゲーム以外のゲームのID、MD5、ゲームの種類、更新日の一覧
      security:
        - LauncherAuth: []
      operationId: getCheckList
      parameters:
        - $ref: '#/components/parameters/sessions'
        - $ref: '#/components/parameters/operatingSystem'
      responses:
        "200":
          description: 成功時のレスポンス
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CheckItem'
        "500":
          description: 失敗時のレスポンス
  /launcher/key/generate:
    post:
      tags:
        - launcherAuth
      summary: プロダクトキー作成
      description: プロダクトキー作成
      security:
        - TrapMemberAuth:
            - read
        - AdminAuth: []
      operationId: postKeyGenerate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductKeyGen'
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductKey'
        "500":
          description: 失敗
  /launcher/key/{productKeyID}:
    parameters:
      - $ref: '#/components/parameters/productKeyID'
    delete:
      tags:
        - launcherAuth
      summary: プロダクトキー失効
      description: プロダクトキー失効
      security:
        - TrapMemberAuth:
            - read
        - AdminAuth: []
      operationId: deleteProductKey
      responses:
        "200":
          description: 成功
        "500":
          description: 失敗
  /launcher/login:
    post:
      tags:
        - launcherAuth
      summary: ランチャーのログイン
      description: ランチャーのログイン
      operationId: postLauncherLogin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductKey'
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LauncherAuthToken'
        "500":
          description: 失敗
  /seats/versions:
    post:
      tags:
        - seatVersion
      summary: 席のバージョン追加
      description: 席のバージョン追加
      security:
        - TrapMemberAuth:
            - read
        - AdminAuth: []
      operationId: postSeatVersion
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewSeatVersion'
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SeatVersion'
        "500":
          description: 失敗
  /seats/versions/{seatVersionID}:
    parameters:
      - $ref: '#/components/parameters/seatVersionID'
    get:
      tags:
        - seat
      summary: 席の状態の取得
      description: 席の状態の取得
      security:
        - TrapMemberAuth:
            - read
      operationId: getSeats
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SeatDetail'
        "500":
          description: 失敗
    delete:
      tags:
        - seatVersion
      summary: 席のバージョン消去
      description: 席のバージョン消去
      security:
        - TrapMemberAuth:
            - read
        - AdminAuth: []
      operationId: deleteSeatVersion
      responses:
        "200":
          description: 成功
        "500":
          description: 失敗
  /seats:
    post:
      tags:
        - seat
      summary: 着席
      description: 着席
      security:
        - LauncherAuth: []
      operationId: postSeat
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Seat'
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SeatDetail'
        "500":
          description: 失敗
    delete:
      tags:
        - seat
      summary: 離席
      description: 離席
      security:
        - LauncherAuth: []
      operationId: deleteSeat
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Seat'
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SeatDetail'
        "500":
          description: 失敗

components:
  securitySchemes:
    TrapMemberAuth:
      type: oauth2
      description: traQのOAuth
      flows:
        authorizationCode:
          authorizationUrl: https://q.trap.jp/api/1.0/oauth2/authorize
          tokenUrl: https://q.trap.jp/api/1.0/oauth2/token
          scopes:
            read: traQの読み取り権限
    GameMaintainerAuth:
      type: apiKey
      description: ゲーム管理者の認証
      in: cookie
      name: userId
    GameOwnerAuth:
      type: apiKey
      description: ゲーム管理者の認証
      in: cookie
      name: userID
    AdminAuth:
      type: apiKey
      description: ランチャー管理者の認証
      in: cookie
      name: userID
    LauncherAuth:
      type: http
      description: ランチャーの認証
      scheme: bearer
  parameters:
    sessions:
      name: sessions
      in: cookie
      required: false
      schema:
        type: string
    userID:
      name: userID
      in: cookie
      required: true
      schema:
        type: string
    userName:
      name: userName
      in: cookie
      required: true
      schema:
        type: string
    versionID:
      name: versionID
      in: cookie
      required: false
      schema:
        type: string
        format: uuid
    operatingSystem:
      name: operatingSystem
      description: osのパラメーター(win32,darwin)
      in: query
      required: true
      schema:
        type: string
    accessToken:
      name: accessToken
      in: cookie
      required: true
      schema:
        type: string
    launcherVersionID:
      name: launcherVersionID
      in: path
      description: ランチャーのバージョンのID
      required: true
      schema:
        type: string
        format: uuid
    gameID:
      name: gameID
      description: ゲームのUUID
      in: path
      required: true
      schema:
        type: string
    gameVersionID:
      description: ゲームのバージョンのID
      name: gameVersionID
      in: path
      required: true
      schema:
        type: string
        format: uuid
        example: "9b144f44-b6a2-4d4e-a626-39fa567211ce"
    questionID:
      description: 質問のID
      name: questionID
      in: path
      required: true
      schema:
        type: integer
    responseID:
      description: 回答のUUID
      name: responseID
      in: path
      required: true
      schema:
        type: string
    productKeyID:
      description: productKeyのID
      name: productKeyID
      in: path
      required: true
      schema:
        type: string
        format: uuid
    seatVersionID:
      description: 席のバージョンのID
      name: seatVersionID
      in: path
      required: true
      schema:
        type: string
        format: uuid
    seatID:
      description: 席のID
      name: seatID
      in: path
      required: true
      schema:
        type: integer
  schemas:
    User:
      description: ユーザー
      type: object
      properties:
        id:
          description: traQのID（UUID）
          type: string
          example: mazrean
        name:
          description: traQID（UUIDでない方）
          type: string
          example: eb4a287d-15d9-4f12-8fff-bd088b12ba80
      required:
        - userId
        - name
    CheckItem:
      type: object
      description: ゲームの更新・破損のチェック用リスト
      properties:
        id:
          type: string
          example: eb4a287d-15d9-4f12-8fff-bd088b12ba80
        md5:
          type: string
          example: 58ad520a63a9cc3e088155d79e8f2eec
        type:
          description: ゲームの種類（url,jar,windows,mac）
          type: string
          example: url
        bodyUpdatedAt:
          description: ゲーム本体の更新日時
          type: string
          format: date-time
          example: '2019-09-25T09:51:31Z'
        imgUpdatedAt:
          description: 画像の更新日時
          type: string
          format: date-time
          example: '2019-09-25T09:51:31Z'
        movieUpdatedAt:
          description: 動画の更新日時
          type: string
          format: date-time
          example: '2019-09-25T09:51:31Z'
      required:
        - id
        - md5
        - type
        - bodyUpdatedAt
        - imgUpdatedAt
        - movieUpdatedAt
    NewGame:
      description: 新しいゲームの名前
      type: object
      properties:
        name:
          description: 修正後のゲームの名前
          type: string
          example: 'after_game_name'
        description:
          description: 修正後のゲームの説明文
          type: string
          example: 'before_game_name'
      required:
        - name
        - description
    Game:
      description: ゲーム
      type: object
      properties:
        id:
          description: ゲームのUUID
          type: string
          example: eb4a287d-15d9-4f12-8fff-bd088b12ba80
        name:
          description: ゲーム名
          type: string
          example: 'Flythm'
        description:
          description: ゲームの説明
          type: string
          example: 'キーボードとマウスで遊ぶ新感覚リズムゲーム！'
        createdAt:
          description: ゲームの登録時刻
          type: string
          format: date-time
          example: '2019-09-25T09:51:31Z'
        version:
          $ref: '#/components/schemas/GameVersion'
      required:
        - id
        - name
        - createdAt
        - version
    GameInfo:
      description: ゲーム名とID
      type: object
      properties:
        id:
          description: 追加されたゲームのUUID
          type: string
          example: 'eb4a287d-15d9-4f12-8fff-bd088b12ba80'
        name:
          description: 追加されたゲームの名前
          type: string
          example: 'Flythm'
        description:
          description: 追加されたゲームの説明
          type: string
          example: 弾幕ゲーです。みんなやってね！
        createdAt:
          description: ゲームの追加された時刻
          type: string
          format: date-time
          example: '2019-09-25T09:51:31Z'
      required:
        - id
        - name
        - description
        - createdAt
    GameMeta:
      description: ゲーム名とID
      type: object
      properties:
        id:
          description: 追加されたゲームのUUID
          type: string
          example: 'eb4a287d-15d9-4f12-8fff-bd088b12ba80'
        name:
          description: 追加されたゲームの名前
          type: string
          example: 'Flythm'
      required:
        - id
        - name
        - createdAt
        - version
    GameIDs:
      description: ゲームのUUIDの一覧
      type: object
      properties:
        gameIDs:
          description: ゲームのUUIDの配列
          type: array
          items:
            description: ゲームのUUID
            type: string
            format: uuid
            example: d321d985-6ceb-40ae-bf59-189810193020
    NewGameVersion:
      description: 新しいゲームのバージョン
      type: object
      properties:
        name:
          description: 名前
          type: string
          example: 'Flythm'
        description:
          description: バージョンの説明
          type: string
          example: ダッシュ機能追加した
      required:
        - name
        - description
    GameVersion:
      description: ゲームのバージョン
      type: object
      properties:
        id:
          description: ID
          type: string
          format: uuid
          example: "9b144f44-b6a2-4d4e-a626-39fa567211ce"
        name:
          description: 名前
          type: string
          example: v1.0.0
        description:
          description: バージョンの説明
          type: string
          example: ダッシュ機能追加した
        createdAt:
          description: 登録時刻
          type: string
          format: date-time
          example: '2019-09-25T09:51:31Z'
      required:
        - id
        - name
        - description
        - createdAt
    NewGameFile:
      description: 新しいゲームのファイル
      type: object
      properties:
        fileType:
          description: ゲームの種類（jar,windows,mac）
          type: string
          example: jar
        file:
          description: ゲームのファイル
          type: string
          format: binary
      required:
        - type
        - file
    NewGameURL:
      description: 新しいゲームのURL
      type: object
      properties:
        url:
          description: URL
          type: string
          example: "https://flythm.trap.games/"
      required:
        - url
    GameFile:
      description: ゲームのファイルの情報
      type: object
      properties:
        id:
          description: アセットのID
          type: string
          format: uuid
        type:
          description: ゲームの種類（jar,windows,mac）
          type: string
          example: jar
      required:
        - id
        - type
    GameURL:
      description: ゲームのURLの情報
      type: object
      properties:
        id:
          description: アセットのID
          type: string
          format: uuid
        url:
          description: ゲームのURL（タイプがURL以外のときはなし）
          type: string
          example: https://flythm.trap.games/
      required:
        - id
        - url
    Maintainers:
      description: 管理者の一覧
      type: object
      properties:
        maintainers:
          type: array
          items:
            description: 権限を与える相手のtraQID（UUID）
            type: string
      required:
        - maintainers
    Maintainer:
      type: object
      properties:
        id:
          description: traQID（UUID）
          type: string
        name:
          description: traQID（UUIDでない方）
          type: string
        role:
          description: 権限（0:ゲームの更新の権限のみ,1:ゲームの更新と更新権限を持つ人の追加の権限を持つ）
          type: integer
      required:
        - id
        - name
        - role
    NewVersion:
      description: 新しいランチャーのバージョンの名前
      type: object
      properties:
        name:
          description: バージョンの名前
          type: string
          example: ko-daisai
        anke-to:
          description: アンケートのURL
          type: string
          format: uri
          example: https://anke-to.trap.jp/questionnaires/517
      required:
        - name
    Version:
      description: ランチャーのバージョン
      type: object
      properties:
        id:
          description: ID
          type: string
          format: uuid
        name:
          description: 名前
          type: string
          example: ko-daisai
        anke-to:
          description: アンケートのURL
          type: string
          format: uri
          example: https://anke-to.trap.jp/questionnaires/517
        createdAt:
          description: 登録時刻
          type: string
          format: date-time
          example: '2019-09-25T09:51:31Z'
      required:
        - id
        - name
        - createdAt
    VersionMeta:
      description: ランチャーのバージョンの簡易的な情報
      type: object
      properties:
        id:
          description: ID
          type: string
          format: uuid
        name:
          description: 名前
          type: string
          example: ko-daisai
        anke-to:
          description: アンケートのURL
          type: string
          format: uri
          example: https://anke-to.trap.jp/questionnaires/517
        createdAt:
          description: 登録時刻
          type: string
          format: date-time
          example: '2019-09-25T09:51:31Z'
      required:
        - id
        - name
        - createdAt
    VersionDetails:
      description: ランチャーのバージョン詳細
      type: object
      properties:
        id:
          description: ID
          type: string
          format: uuid
        name:
          description: 名前
          type: string
          example: ko-daisai
        anke-to:
          description: アンケートのURL
          type: string
          format: uri
          example: https://anke-to.trap.jp/questionnaires/517
        games:
          type: array
          items:
            $ref: '#/components/schemas/GameMeta'
        createdAt:
          description: 登録時刻
          type: string
          format: date-time
          example: '2019-09-25T09:51:31Z'
      required:
        - id
        - name
        - games
        - createdAt
    ProductKeyGen:
      description: プロダクトキー生成のリクエスト
      type: object
      properties:
        num:
          type: integer
          example: 20
        version:
          description: バージョンID
          type: string
          format: uuid
      required:
        - num
        - version
    ProductKey:
      description: プロダクトキー
      type: object
      properties:
        key:
          description: プロダクトキー
          type: string
          pattern: '^[0-9a-zA-Z]{5}-[0-9a-zA-Z]{5}-[0-9a-zA-Z]{5}-[0-9a-zA-Z]{5}-[0-9a-zA-Z]{5}'
          example: xxxxx-xxxxx-xxxxx-xxxxx-xxxxx
      required:
        - key
    ProductKeyDetail:
      description: プロダクトキーの詳細
      type: object
      properties:
        id:
          description: プロダクトキーのID
          type: string
          format: uuid
        key:
          description: プロダクトキー
          type: string
          pattern: '^[0-9a-zA-Z]{5}-[0-9a-zA-Z]{5}-[0-9a-zA-Z]{5}-[0-9a-zA-Z]{5}-[0-9a-zA-Z]{5}'
          example: xxxxx-xxxxx-xxxxx-xxxxx-xxxxx
      required:
        - key
    LauncherAuthToken:
      description: ランチャーのトークン
      type: object
      properties:
        accessToken:
          type: string
          maxLength: 36
          minLength: 36
          pattern: '[0-9a-zA-Z]{36}'
        expiresIn:
          description: アクセストークンの持続時間(秒)
          type: integer
          example: 3600
        refreshToken:
          type: string
          maxLength: 36
          minLength: 36
          pattern: '[0-9a-zA-Z]{36}'
      required:
        - accessToken
        - expiresIn
        - refreshToken
    NewSeatVersion:
      description: 新しい席のバージョン
      type: object
      properties:
        width:
          type: integer
          example: 10
        hight:
          type: integer
          example: 10
      required:
        - width
        - height
    SeatVersion:
      description: 席のバージョン
      type: object
      properties:
        id:
          type: string
          format: uuid
        width:
          type: integer
          example: 10
        hight:
          type: integer
          example: 10
        createdAt:
          description: 作成時刻
          type: string
          format: date-time
          example: '2019-09-25T09:51:31Z'
      required:
        - id
        - width
        - height
        - createdAt
    Seat:
      description: 席
      type: object
      properties:
        seatVersionId:
          type: integer
          example: 0
        seatId:
          type: integer
          example: 0
      required:
        - seatVersionId
        - seatId
    SeatDetail:
      description: 席の詳細
      type: object
      properties:
        id:
          type: integer
          example: 0
        status:
          description: 席の状態(0で離席、1で着席)
          type: integer
        seatingTime:
          description: 着席時刻
          type: string
          format: date-time
          example: '2019-09-25T09:51:31Z'
      required:
        - id
        - status
